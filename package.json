{
  "name": "buymart-v1",
  "version": "1.0.0",
  "description": "Ardonie Capital - Business Acquisition Platform with Shadcn MCP Server Integration",
  "type": "module",
  "main": "index.js",
  "scripts": {
    "dev": "python3 -m http.server 8000",
    "mcp:install": "npm install @heilgar/shadcn-ui-mcp-server",
    "mcp:start": "shadcn-ui-mcp-server",
    "mcp:inspector": "npx @modelcontextprotocol/inspector",
    "mcp:test": "node scripts/testing/test-mcp.js",
    "mcp:setup": "node scripts/setup/setup-mcp.js",
    "start:all": "concurrently \"npm run dev\" \"npm run mcp:start\"",
    "build": "npm run build:css",
    "build:css": "npx tailwindcss -i ./src/input.css -o ./assets/css/tailwind.css --minify",
    "build:css:watch": "npx tailwindcss -i ./src/input.css -o ./assets/css/tailwind.css --watch",
    "build:development": "npm run build:css && npm run build:js:dev",
    "build:staging": "npm run build:css && npm run build:js:staging && npm run optimize:staging",
    "build:production": "npm run build:css && npm run build:js:prod && npm run optimize:production",
    "build:js:dev": "echo 'Building JavaScript for development...'",
    "build:js:staging": "echo 'Building JavaScript for staging...'",
    "build:js:prod": "echo 'Building JavaScript for production...'",
    "optimize:staging": "echo 'Optimizing assets for staging...'",
    "optimize:production": "echo 'Optimizing assets for production...'",
    "build:staging:package": "npm run build:staging && node scripts/deployment/create-staging-package.js",
    "build:production:package": "npm run build:production && node scripts/deployment/create-production-package.js",
    "deploy:development": "ENVIRONMENT=development node scripts/deployment/hostinger-deploy.js",
    "deploy:staging": "ENVIRONMENT=staging node scripts/deployment/hostinger-deploy.js",
    "deploy:staging:server": "ENVIRONMENT=staging node scripts/deployment/deploy-to-server.js",
    "deploy:production": "ENVIRONMENT=production node scripts/deployment/hostinger-deploy.js",
    "deploy:hostinger": "npm run deploy:production",
    "deploy:aws": "node scripts/deployment/aws-deploy.js",
    "package:hostinger": "node scripts/deployment/create-hostinger-package.js",
    "backup:staging": "node scripts/deployment/backup.js staging",
    "backup:production": "node scripts/deployment/backup.js production",
    "backup:db:production": "node scripts/database/backup-database.js production",
    "backup:upload:production": "node scripts/deployment/upload-backup.js production",
    "migrate:development": "node scripts/database/migrate.js development",
    "migrate:staging": "node scripts/database/migrate.js staging",
    "migrate:production": "node scripts/database/migrate.js production",
    "seed:development": "node scripts/database/seed.js development",
    "seed:staging": "node scripts/database/seed.js staging",
    "validate:development": "node scripts/validation/validate-environment.js development",
    "validate:staging": "node scripts/validation/validate-environment.js staging",
    "validate:production": "node scripts/validation/validate-environment.js production",
    "validate:build": "node scripts/validation/validate-build.js",
    "validate:build:production": "node scripts/validation/validate-build.js production",
    "validate:db:staging": "node scripts/validation/validate-database.js staging",
    "validate:db:production": "node scripts/validation/validate-database.js production",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "jest --testPathPattern=e2e",
    "test:security": "node scripts/testing/security-tests.js",
    "test:performance": "node scripts/testing/performance-tests.js",
    "test:a11y": "node scripts/testing/accessibility-tests.js",
    "test:staging": "ENVIRONMENT=staging npm run test:integration",
    "test:e2e:staging": "ENVIRONMENT=staging npm run test:e2e",
    "test:auth:staging": "ENVIRONMENT=staging node scripts/testing/auth-tests.js",
    "test:oauth:staging": "ENVIRONMENT=staging node scripts/testing/oauth-tests.js",
    "test:db:staging": "ENVIRONMENT=staging node scripts/testing/database-tests.js",
    "test:performance:staging": "ENVIRONMENT=staging npm run test:performance",
    "test:a11y:staging": "ENVIRONMENT=staging npm run test:a11y",
    "test:critical:production": "ENVIRONMENT=production node scripts/testing/critical-path-tests.js",
    "test:auth:production": "ENVIRONMENT=production node scripts/testing/auth-tests.js",
    "test:oauth:production": "ENVIRONMENT=production node scripts/testing/oauth-tests.js",
    "test:payments:production": "ENVIRONMENT=production node scripts/testing/payment-tests.js",
    "test:db:production": "ENVIRONMENT=production node scripts/testing/database-tests.js",
    "test:security:production": "ENVIRONMENT=production npm run test:security",
    "monitor:performance:production": "ENVIRONMENT=production node scripts/monitoring/performance-monitor.js",
    "setup:monitoring:production": "ENVIRONMENT=production node scripts/monitoring/setup-monitoring.js",
    "setup:performance:tracking": "node scripts/monitoring/setup-performance-tracking.js",
    "setup:error:tracking": "node scripts/monitoring/setup-error-tracking.js",
    "test:shared": "jest --selectProjects=\"Shared Utilities\"",
    "test:auth": "jest --selectProjects=\"Authentication\"",
    "test:dashboard": "jest --selectProjects=\"Dashboard\"",
    "test:marketplace": "jest --selectProjects=\"Marketplace\"",
    "test:components": "jest --selectProjects=\"Components\"",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --runInBand",
    "supabase:test": "node scripts/testing/test-supabase-connection.js",
    "supabase:test-rls": "node scripts/testing/test-rls-policies.js",
    "supabase:setup-rls": "node scripts/setup/setup-supabase-rls.js",
    "supabase:test-all": "node scripts/testing/run-all-supabase-tests.js",
    "migrate:blog": "node scripts/migration/migrate-blog-posts.js",
    "migrate:documents": "node scripts/migration/migrate-documents.js",
    "migrate:all": "node scripts/migration/run-data-migration.js",
    "migrate:rollback": "node scripts/migration/run-data-migration.js --rollback",
    "test:clear-cache": "jest --clearCache",
    "coverage:open": "open dev/coverage/lcov-report/index.html",
    "lint": "eslint src/ tests/ --ext .js",
    "lint:fix": "eslint src/ tests/ --ext .js --fix",
    "format": "prettier --write \"src/**/*.js\" \"tests/**/*.js\"",
    "validate": "npm run lint && npm run test:ci"
  },
  "keywords": [
    "business-acquisition",
    "marketplace",
    "shadcn-ui",
    "mcp-server",
    "ai-assistant"
  ],
  "author": "Ardonie Capital",
  "license": "MIT",
  "dependencies": {
    "@heilgar/shadcn-ui-mcp-server": "^1.0.6",
    "@modelcontextprotocol/inspector": "^0.13.0",
    "@supabase/supabase-js": "^2.50.4",
    "concurrently": "^8.2.2",
    "jsdom": "^23.2.0"
  },
  "devDependencies": {
    "@babel/core": "^7.22.0",
    "@babel/preset-env": "^7.22.0",
    "@tailwindcss/typography": "^0.5.16",
    "@types/node": "^22.15.18",
    "babel-jest": "^29.5.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-jest": "^27.2.0",
    "jest": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "jest-html-reporters": "^3.1.4",
    "jest-junit": "^16.0.0",
    "jest-sonar-reporter": "^2.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "prettier": "^2.8.8",
    "tailwindcss": "^3.4.17",
    "typescript": "^5.8.3"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/stevenknowswhy/ArdonieCapital-BusinessAcquisition.git"
  },
  "mcp": {
    "server": {
      "name": "shadcn-ui-server",
      "port": 3001,
      "endpoint": "http://localhost:3001/sse",
      "description": "Shadcn UI MCP Server for AI-assisted component integration"
    }
  }
}
