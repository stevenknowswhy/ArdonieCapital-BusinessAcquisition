-- TEST USER PROFILES WITH ACTUAL SUPABASE UUIDs
-- Purpose: Create test user profiles using the actual UUIDs generated by Supabase Dashboard
-- Resolves UUID mismatch between expected and actual auth.users UUIDs
-- Project: BuyMartV1 - Multi-Role Database Schema

-- ============================================================================
-- ACTUAL UUID MAPPING FROM SUPABASE DASHBOARD
-- ============================================================================

DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üîÑ ============================================================================';
    RAISE NOTICE 'üîÑ CREATING TEST USER PROFILES WITH ACTUAL SUPABASE UUIDs';
    RAISE NOTICE 'üîÑ ============================================================================';
    RAISE NOTICE '';
    RAISE NOTICE 'üìã UUID MAPPING:';
    RAISE NOTICE '   buyer.free@testuser.ardonie.com ‚Üí 2a07ad22-77b0-4a01-bc0a-ea17bd9b77d6';
    RAISE NOTICE '   buyer.pro@testuser.ardonie.com ‚Üí be595b4e-58ed-4229-a8fd-7d6c89a3f226';
    RAISE NOTICE '   seller.free@testuser.ardonie.com ‚Üí 3cdd4257-dc32-4552-a191-3b55ccd6e56a';
    RAISE NOTICE '   seller.pro@testuser.ardonie.com ‚Üí 041c2bad-db8e-48f0-8df6-4165ac89075f';
    RAISE NOTICE '   financial.vendor@testuser.ardonie.com ‚Üí 71a53184-c992-404d-b8e0-2b3a13acd63f';
    RAISE NOTICE '   legal.vendor@testuser.ardonie.com ‚Üí 62a6bafe-b994-497e-83b0-0c6b0b4ef284';
    RAISE NOTICE '';
END $$;

-- ============================================================================
-- 1. CREATE PROFILES WITH ACTUAL UUIDs
-- ============================================================================

DO $$
DECLARE
    buyer_role_id UUID;
    seller_role_id UUID;
    financial_role_id UUID;
    legal_role_id UUID;
    default_company_id UUID;
    free_tier_id UUID;
    pro_tier_id UUID;
    profile_count INTEGER := 0;
BEGIN
    RAISE NOTICE 'üìã STEP 1: CREATING TEST USER PROFILES WITH ACTUAL UUIDs';
    RAISE NOTICE '';
    
    -- Get required IDs
    SELECT id INTO buyer_role_id FROM roles WHERE slug = 'buyer';
    SELECT id INTO seller_role_id FROM roles WHERE slug = 'seller';
    SELECT id INTO financial_role_id FROM roles WHERE slug = 'financial_professional';
    SELECT id INTO legal_role_id FROM roles WHERE slug = 'legal_professional';
    SELECT id INTO default_company_id FROM companies WHERE slug = 'ardonie-capital';
    SELECT id INTO free_tier_id FROM subscription_tiers WHERE slug = 'free';
    SELECT id INTO pro_tier_id FROM subscription_tiers WHERE slug = 'pro';
    
    -- Verify required references exist
    IF buyer_role_id IS NULL THEN
        RAISE EXCEPTION 'buyer role not found - run multi-role deployment script first';
    END IF;
    IF default_company_id IS NULL THEN
        RAISE EXCEPTION 'default company not found - run multi-role deployment script first';
    END IF;
    IF free_tier_id IS NULL THEN
        RAISE EXCEPTION 'free subscription tier not found - run multi-role deployment script first';
    END IF;
    
    RAISE NOTICE '‚úÖ All required references found - creating profiles';
    RAISE NOTICE '';
    
    -- Create test user profiles with actual Supabase UUIDs
    
    -- Buyer Free (2a07ad22-77b0-4a01-bc0a-ea17bd9b77d6)
    BEGIN
        INSERT INTO profiles (
            user_id, first_name, last_name, role, phone, business_type, location,
            subscription_tier_id, subscription_status, onboarding_completed, onboarding_step,
            company_id, legacy_role, migration_status
        ) VALUES (
            '2a07ad22-77b0-4a01-bc0a-ea17bd9b77d6',
            'Sarah', 'Johnson', 'buyer', '+1-555-0101', 'Individual Investor', 'Austin, TX',
            free_tier_id, 'free', false, 2, default_company_id, 'buyer', 'migrated'
        ) ON CONFLICT (user_id) DO UPDATE SET
            first_name = EXCLUDED.first_name,
            last_name = EXCLUDED.last_name,
            role = EXCLUDED.role,
            phone = EXCLUDED.phone,
            business_type = EXCLUDED.business_type,
            location = EXCLUDED.location,
            subscription_tier_id = EXCLUDED.subscription_tier_id,
            subscription_status = EXCLUDED.subscription_status,
            onboarding_completed = EXCLUDED.onboarding_completed,
            onboarding_step = EXCLUDED.onboarding_step,
            company_id = EXCLUDED.company_id,
            legacy_role = EXCLUDED.legacy_role,
            migration_status = EXCLUDED.migration_status;
        
        RAISE NOTICE '‚úÖ Created profile: buyer.free@testuser.ardonie.com (2a07ad22-77b0-4a01-bc0a-ea17bd9b77d6)';
        profile_count := profile_count + 1;
    EXCEPTION
        WHEN OTHERS THEN
            RAISE NOTICE '‚ùå Failed to create buyer.free profile: %', SQLERRM;
    END;
    
    -- Buyer Pro (be595b4e-58ed-4229-a8fd-7d6c89a3f226)
    BEGIN
        INSERT INTO profiles (
            user_id, first_name, last_name, role, phone, business_type, location,
            subscription_tier_id, subscription_status, onboarding_completed, onboarding_step,
            company_id, legacy_role, migration_status
        ) VALUES (
            'be595b4e-58ed-4229-a8fd-7d6c89a3f226',
            'Michael', 'Chen', 'buyer', '+1-555-0102', 'Private Equity Firm', 'San Francisco, CA',
            pro_tier_id, 'active', true, 0, default_company_id, 'buyer', 'migrated'
        ) ON CONFLICT (user_id) DO UPDATE SET
            first_name = EXCLUDED.first_name,
            last_name = EXCLUDED.last_name,
            role = EXCLUDED.role,
            phone = EXCLUDED.phone,
            business_type = EXCLUDED.business_type,
            location = EXCLUDED.location,
            subscription_tier_id = EXCLUDED.subscription_tier_id,
            subscription_status = EXCLUDED.subscription_status,
            onboarding_completed = EXCLUDED.onboarding_completed,
            onboarding_step = EXCLUDED.onboarding_step,
            company_id = EXCLUDED.company_id,
            legacy_role = EXCLUDED.legacy_role,
            migration_status = EXCLUDED.migration_status;
        
        RAISE NOTICE '‚úÖ Created profile: buyer.pro@testuser.ardonie.com (be595b4e-58ed-4229-a8fd-7d6c89a3f226)';
        profile_count := profile_count + 1;
    EXCEPTION
        WHEN OTHERS THEN
            RAISE NOTICE '‚ùå Failed to create buyer.pro profile: %', SQLERRM;
    END;
    
    -- Seller Free (3cdd4257-dc32-4552-a191-3b55ccd6e56a)
    BEGIN
        INSERT INTO profiles (
            user_id, first_name, last_name, role, phone, business_type, location,
            subscription_tier_id, subscription_status, onboarding_completed, onboarding_step,
            company_id, legacy_role, migration_status
        ) VALUES (
            '3cdd4257-dc32-4552-a191-3b55ccd6e56a',
            'Robert', 'Martinez', 'seller', '+1-555-0201', 'Auto Repair Shop', 'Phoenix, AZ',
            free_tier_id, 'free', false, 3, default_company_id, 'seller', 'migrated'
        ) ON CONFLICT (user_id) DO UPDATE SET
            first_name = EXCLUDED.first_name,
            last_name = EXCLUDED.last_name,
            role = EXCLUDED.role,
            phone = EXCLUDED.phone,
            business_type = EXCLUDED.business_type,
            location = EXCLUDED.location,
            subscription_tier_id = EXCLUDED.subscription_tier_id,
            subscription_status = EXCLUDED.subscription_status,
            onboarding_completed = EXCLUDED.onboarding_completed,
            onboarding_step = EXCLUDED.onboarding_step,
            company_id = EXCLUDED.company_id,
            legacy_role = EXCLUDED.legacy_role,
            migration_status = EXCLUDED.migration_status;
        
        RAISE NOTICE '‚úÖ Created profile: seller.free@testuser.ardonie.com (3cdd4257-dc32-4552-a191-3b55ccd6e56a)';
        profile_count := profile_count + 1;
    EXCEPTION
        WHEN OTHERS THEN
            RAISE NOTICE '‚ùå Failed to create seller.free profile: %', SQLERRM;
    END;
    
    -- Seller Pro (041c2bad-db8e-48f0-8df6-4165ac89075f)
    BEGIN
        INSERT INTO profiles (
            user_id, first_name, last_name, role, phone, business_type, location,
            subscription_tier_id, subscription_status, onboarding_completed, onboarding_step,
            company_id, legacy_role, migration_status
        ) VALUES (
            '041c2bad-db8e-48f0-8df6-4165ac89075f',
            'Jennifer', 'Williams', 'seller', '+1-555-0202', 'Multi-Location Auto Group', 'Dallas, TX',
            pro_tier_id, 'active', true, 0, default_company_id, 'seller', 'migrated'
        ) ON CONFLICT (user_id) DO UPDATE SET
            first_name = EXCLUDED.first_name,
            last_name = EXCLUDED.last_name,
            role = EXCLUDED.role,
            phone = EXCLUDED.phone,
            business_type = EXCLUDED.business_type,
            location = EXCLUDED.location,
            subscription_tier_id = EXCLUDED.subscription_tier_id,
            subscription_status = EXCLUDED.subscription_status,
            onboarding_completed = EXCLUDED.onboarding_completed,
            onboarding_step = EXCLUDED.onboarding_step,
            company_id = EXCLUDED.company_id,
            legacy_role = EXCLUDED.legacy_role,
            migration_status = EXCLUDED.migration_status;
        
        RAISE NOTICE '‚úÖ Created profile: seller.pro@testuser.ardonie.com (041c2bad-db8e-48f0-8df6-4165ac89075f)';
        profile_count := profile_count + 1;
    EXCEPTION
        WHEN OTHERS THEN
            RAISE NOTICE '‚ùå Failed to create seller.pro profile: %', SQLERRM;
    END;
    
    -- Financial Vendor (71a53184-c992-404d-b8e0-2b3a13acd63f)
    BEGIN
        INSERT INTO profiles (
            user_id, first_name, last_name, role, phone, business_type, location,
            subscription_tier_id, subscription_status, onboarding_completed, onboarding_step,
            company_id, legacy_role, migration_status
        ) VALUES (
            '71a53184-c992-404d-b8e0-2b3a13acd63f',
            'David', 'Thompson', 'vendor', '+1-555-0301', 'Financial Services', 'Chicago, IL',
            pro_tier_id, 'active', true, 0, default_company_id, 'vendor', 'migrated'
        ) ON CONFLICT (user_id) DO UPDATE SET
            first_name = EXCLUDED.first_name,
            last_name = EXCLUDED.last_name,
            role = EXCLUDED.role,
            phone = EXCLUDED.phone,
            business_type = EXCLUDED.business_type,
            location = EXCLUDED.location,
            subscription_tier_id = EXCLUDED.subscription_tier_id,
            subscription_status = EXCLUDED.subscription_status,
            onboarding_completed = EXCLUDED.onboarding_completed,
            onboarding_step = EXCLUDED.onboarding_step,
            company_id = EXCLUDED.company_id,
            legacy_role = EXCLUDED.legacy_role,
            migration_status = EXCLUDED.migration_status;
        
        RAISE NOTICE '‚úÖ Created profile: financial.vendor@testuser.ardonie.com (71a53184-c992-404d-b8e0-2b3a13acd63f)';
        profile_count := profile_count + 1;
    EXCEPTION
        WHEN OTHERS THEN
            RAISE NOTICE '‚ùå Failed to create financial.vendor profile: %', SQLERRM;
    END;
    
    -- Legal Vendor (62a6bafe-b994-497e-83b0-0c6b0b4ef284)
    BEGIN
        INSERT INTO profiles (
            user_id, first_name, last_name, role, phone, business_type, location,
            subscription_tier_id, subscription_status, onboarding_completed, onboarding_step,
            company_id, legacy_role, migration_status
        ) VALUES (
            '62a6bafe-b994-497e-83b0-0c6b0b4ef284',
            'Amanda', 'Rodriguez', 'vendor', '+1-555-0302', 'Legal Services', 'Miami, FL',
            pro_tier_id, 'active', true, 0, default_company_id, 'vendor', 'migrated'
        ) ON CONFLICT (user_id) DO UPDATE SET
            first_name = EXCLUDED.first_name,
            last_name = EXCLUDED.last_name,
            role = EXCLUDED.role,
            phone = EXCLUDED.phone,
            business_type = EXCLUDED.business_type,
            location = EXCLUDED.location,
            subscription_tier_id = EXCLUDED.subscription_tier_id,
            subscription_status = EXCLUDED.subscription_status,
            onboarding_completed = EXCLUDED.onboarding_completed,
            onboarding_step = EXCLUDED.onboarding_step,
            company_id = EXCLUDED.company_id,
            legacy_role = EXCLUDED.legacy_role,
            migration_status = EXCLUDED.migration_status;
        
        RAISE NOTICE '‚úÖ Created profile: legal.vendor@testuser.ardonie.com (62a6bafe-b994-497e-83b0-0c6b0b4ef284)';
        profile_count := profile_count + 1;
    EXCEPTION
        WHEN OTHERS THEN
            RAISE NOTICE '‚ùå Failed to create legal.vendor profile: %', SQLERRM;
    END;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üìä PROFILE CREATION SUMMARY:';
    RAISE NOTICE '   ‚Ä¢ Successfully created: % profiles', profile_count;
    RAISE NOTICE '   ‚Ä¢ Expected total: 6 profiles';
    
    IF profile_count = 6 THEN
        RAISE NOTICE '‚úÖ All test user profiles created successfully with actual UUIDs!';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  Some profiles failed to create - check error messages above';
    END IF;
END $$;

-- ============================================================================
-- 2. CREATE USER ROLES WITH ACTUAL UUIDs
-- ============================================================================

DO $$
DECLARE
    buyer_role_id UUID;
    seller_role_id UUID;
    financial_role_id UUID;
    legal_role_id UUID;
    default_company_id UUID;
    role_count INTEGER := 0;
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üìã STEP 2: CREATING USER ROLE ASSIGNMENTS WITH ACTUAL UUIDs';
    RAISE NOTICE '';

    -- Get required IDs
    SELECT id INTO buyer_role_id FROM roles WHERE slug = 'buyer';
    SELECT id INTO seller_role_id FROM roles WHERE slug = 'seller';
    SELECT id INTO financial_role_id FROM roles WHERE slug = 'financial_professional';
    SELECT id INTO legal_role_id FROM roles WHERE slug = 'legal_professional';
    SELECT id INTO default_company_id FROM companies WHERE slug = 'ardonie-capital';

    -- Assign roles to test users with actual UUIDs
    INSERT INTO user_roles (user_id, role_id, company_id, assigned_by, is_active, metadata) VALUES
    ('2a07ad22-77b0-4a01-bc0a-ea17bd9b77d6', buyer_role_id, default_company_id, '2a07ad22-77b0-4a01-bc0a-ea17bd9b77d6', true, '{"test_user": true, "category": "single_role_buyer", "tier": "free"}'),
    ('be595b4e-58ed-4229-a8fd-7d6c89a3f226', buyer_role_id, default_company_id, 'be595b4e-58ed-4229-a8fd-7d6c89a3f226', true, '{"test_user": true, "category": "single_role_buyer", "tier": "pro"}'),
    ('3cdd4257-dc32-4552-a191-3b55ccd6e56a', seller_role_id, default_company_id, '3cdd4257-dc32-4552-a191-3b55ccd6e56a', true, '{"test_user": true, "category": "single_role_seller", "tier": "free"}'),
    ('041c2bad-db8e-48f0-8df6-4165ac89075f', seller_role_id, default_company_id, '041c2bad-db8e-48f0-8df6-4165ac89075f', true, '{"test_user": true, "category": "single_role_seller", "tier": "pro"}'),
    ('71a53184-c992-404d-b8e0-2b3a13acd63f', financial_role_id, default_company_id, '71a53184-c992-404d-b8e0-2b3a13acd63f', true, '{"test_user": true, "category": "single_role_vendor", "vendor_type": "financial"}'),
    ('62a6bafe-b994-497e-83b0-0c6b0b4ef284', legal_role_id, default_company_id, '62a6bafe-b994-497e-83b0-0c6b0b4ef284', true, '{"test_user": true, "category": "single_role_vendor", "vendor_type": "legal"}')
    ON CONFLICT (user_id, role_id, company_id) DO NOTHING;

    GET DIAGNOSTICS role_count = ROW_COUNT;
    RAISE NOTICE '‚úÖ Created % user role assignments', role_count;
END $$;

-- ============================================================================
-- 3. CREATE USER SESSIONS WITH ACTUAL UUIDs
-- ============================================================================

DO $$
DECLARE
    buyer_role_id UUID;
    seller_role_id UUID;
    financial_role_id UUID;
    legal_role_id UUID;
    session_count INTEGER := 0;
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üìã STEP 3: CREATING USER SESSIONS WITH ACTUAL UUIDs';
    RAISE NOTICE '';

    -- Get role IDs
    SELECT id INTO buyer_role_id FROM roles WHERE slug = 'buyer';
    SELECT id INTO seller_role_id FROM roles WHERE slug = 'seller';
    SELECT id INTO financial_role_id FROM roles WHERE slug = 'financial_professional';
    SELECT id INTO legal_role_id FROM roles WHERE slug = 'legal_professional';

    -- Create user sessions with actual UUIDs
    INSERT INTO user_sessions (user_id, active_role_id, preferences) VALUES
    ('2a07ad22-77b0-4a01-bc0a-ea17bd9b77d6', buyer_role_id, '{"test_user": true, "dashboard_theme": "light", "notifications": true}'),
    ('be595b4e-58ed-4229-a8fd-7d6c89a3f226', buyer_role_id, '{"test_user": true, "dashboard_theme": "dark", "notifications": true, "advanced_filters": true}'),
    ('3cdd4257-dc32-4552-a191-3b55ccd6e56a', seller_role_id, '{"test_user": true, "dashboard_theme": "light", "listing_alerts": true}'),
    ('041c2bad-db8e-48f0-8df6-4165ac89075f', seller_role_id, '{"test_user": true, "dashboard_theme": "dark", "analytics_enabled": true, "priority_support": true}'),
    ('71a53184-c992-404d-b8e0-2b3a13acd63f', financial_role_id, '{"test_user": true, "dashboard_theme": "professional", "client_management": true, "financial_tools": true}'),
    ('62a6bafe-b994-497e-83b0-0c6b0b4ef284', legal_role_id, '{"test_user": true, "dashboard_theme": "professional", "legal_tools": true, "document_management": true}')
    ON CONFLICT (user_id) DO NOTHING;

    GET DIAGNOSTICS session_count = ROW_COUNT;
    RAISE NOTICE '‚úÖ Created % user sessions', session_count;
END $$;

-- ============================================================================
-- 4. CREATE USER SUBSCRIPTIONS WITH ACTUAL UUIDs
-- ============================================================================

DO $$
DECLARE
    free_tier_id UUID;
    pro_tier_id UUID;
    subscription_count INTEGER := 0;
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üìã STEP 4: CREATING USER SUBSCRIPTIONS WITH ACTUAL UUIDs';
    RAISE NOTICE '';

    -- Get subscription tier IDs
    SELECT id INTO free_tier_id FROM subscription_tiers WHERE slug = 'free';
    SELECT id INTO pro_tier_id FROM subscription_tiers WHERE slug = 'pro';

    -- Create user subscriptions with actual UUIDs
    INSERT INTO user_subscriptions (user_id, tier_id, status, started_at) VALUES
    ('2a07ad22-77b0-4a01-bc0a-ea17bd9b77d6', free_tier_id, 'active', NOW() - INTERVAL '30 days'),
    ('be595b4e-58ed-4229-a8fd-7d6c89a3f226', pro_tier_id, 'active', NOW() - INTERVAL '90 days'),
    ('3cdd4257-dc32-4552-a191-3b55ccd6e56a', free_tier_id, 'active', NOW() - INTERVAL '15 days'),
    ('041c2bad-db8e-48f0-8df6-4165ac89075f', pro_tier_id, 'active', NOW() - INTERVAL '180 days'),
    ('71a53184-c992-404d-b8e0-2b3a13acd63f', pro_tier_id, 'active', NOW() - INTERVAL '120 days'),
    ('62a6bafe-b994-497e-83b0-0c6b0b4ef284', pro_tier_id, 'active', NOW() - INTERVAL '200 days')
    ON CONFLICT (user_id, tier_id) DO NOTHING;

    GET DIAGNOSTICS subscription_count = ROW_COUNT;
    RAISE NOTICE '‚úÖ Created % user subscriptions', subscription_count;
END $$;

-- ============================================================================
-- 5. FINAL SUMMARY WITH ACTUAL UUIDs
-- ============================================================================

DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üéâ ============================================================================';
    RAISE NOTICE 'üéâ TEST USER DEPLOYMENT COMPLETED WITH ACTUAL SUPABASE UUIDs';
    RAISE NOTICE 'üéâ ============================================================================';
    RAISE NOTICE '';
    RAISE NOTICE '‚úÖ WHAT WAS CREATED:';
    RAISE NOTICE '   ‚Ä¢ 6 test user profiles with actual Supabase UUIDs';
    RAISE NOTICE '   ‚Ä¢ 6 user role assignments for single-role testing';
    RAISE NOTICE '   ‚Ä¢ 6 user sessions with appropriate active roles';
    RAISE NOTICE '   ‚Ä¢ 6 user subscriptions (2 Free, 4 Pro)';
    RAISE NOTICE '';
    RAISE NOTICE 'üîë TEST CREDENTIALS (use actual emails):';
    RAISE NOTICE '   ‚Ä¢ buyer.free@testuser.ardonie.com / TestUser123!';
    RAISE NOTICE '   ‚Ä¢ buyer.pro@testuser.ardonie.com / TestUser123!';
    RAISE NOTICE '   ‚Ä¢ seller.free@testuser.ardonie.com / TestUser123!';
    RAISE NOTICE '   ‚Ä¢ seller.pro@testuser.ardonie.com / TestUser123!';
    RAISE NOTICE '   ‚Ä¢ financial.vendor@testuser.ardonie.com / TestUser123!';
    RAISE NOTICE '   ‚Ä¢ legal.vendor@testuser.ardonie.com / TestUser123!';
    RAISE NOTICE '';
    RAISE NOTICE 'üîÑ NEXT STEPS:';
    RAISE NOTICE '   1. Run database/VERIFY-TEST-USERS.sql to confirm deployment';
    RAISE NOTICE '   2. Test authentication with the credentials above';
    RAISE NOTICE '   3. Verify role-based dashboard routing works';
    RAISE NOTICE '   4. Test subscription tier features (Free vs Pro)';
    RAISE NOTICE '';
    RAISE NOTICE 'üéâ ============================================================================';
END $$;
